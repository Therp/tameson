// Generated by CoffeeScript 1.12.7
(function() {
  odoo.define('tameson_stock.list_view', function(require) {
    var FormController, ListController, rpc;
    FormController = require('web.FormController');
    ListController = require('web.ListController');
    rpc = require('web.rpc');
    FormController.include({
      renderButtons: function($node) {
        var ret;
        ret = this._super.apply(this, arguments);
        if (this.$buttons) {
          this.$buttons.on('click', '.batch-picking-ups-labels', this.batch_picking_ups_labels.bind(this));
          this.$buttons.on('click', '.batch-picking-delivery-labels', this.batch_picking_delivery_labels.bind(this));
        }
        return ret;
      },
      batch_picking_ups_labels: function() {
        var path, selected_ids, state, url;
        state = this.model.get(this.handle, {
          raw: true
        });
        selected_ids = state.data.picking_ids;
        path = "/stock/ups_labels/" + (selected_ids.join(","));
        url = location.protocol + "//" + location.host + path;
        return window.open(url, '_blank');
      },
      batch_picking_delivery_labels: function() {
        var selected_ids, state;
        state = this.model.get(this.handle, {
          raw: true
        });
        selected_ids = state.data.picking_ids;
        return rpc.query({
          model: 'stock.picking',
          method: 'search_read',
          args: [[['id', 'in', selected_ids], ['state', 'not in', ['draft', 'cancel']]], ['id']]
        }).then(function(objs) {
          var i, ids, path, url;
          ids = (function() {
            var j, len, results;
            results = [];
            for (j = 0, len = objs.length; j < len; j++) {
              i = objs[j];
              results.push(i.id);
            }
            return results;
          })();
          path = "/stock/delivery_labels/" + (ids.join(","));
          url = location.protocol + "//" + location.host + path;
          return window.open(url, '_blank');
        });
      }
    });
    return ListController.include({
      renderButtons: function($node) {
        var ret;
        ret = this._super.apply(this, arguments);
        this._buttonSelectionToggle();
        if (this.$buttons) {
          this.$buttons.on('click', '.picking-ups-labels', this.proxy('picking_ups_labels'));
          this.$buttons.on('click', '.picking-delivery-labels', this.proxy('picking_delivery_labels'));
        }
        return ret;
      },
      _onSelectionChanged: function(event) {
        var ret;
        ret = this._super.apply(this, arguments);
        this._buttonSelectionToggle();
        return ret;
      },
      _buttonSelectionToggle: function() {
        var $buttons;
        if (!this.$buttons) {
          return;
        }
        $buttons = this.$buttons.find('button.js-show-when-selected');
        if (this.selectedRecords.length === 0) {
          return $buttons.addClass('disabled');
        } else {
          return $buttons.removeClass('disabled');
        }
      },
      picking_ups_labels: function() {
        var path, r, selected_ids, url;
        selected_ids = (function() {
          var j, len, ref, results;
          ref = this.selectedRecords;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            r = ref[j];
            results.push(this.model.get(r).res_id);
          }
          return results;
        }).call(this);
        path = "/stock/ups_labels/" + (selected_ids.join(","));
        url = location.protocol + "//" + location.host + path;
        return window.open(url, '_blank');
      },
      picking_delivery_labels: function() {
        var path, r, selected_ids, url;
        selected_ids = (function() {
          var j, len, ref, results;
          ref = this.selectedRecords;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            r = ref[j];
            results.push(this.model.get(r).res_id);
          }
          return results;
        }).call(this);
        path = "/stock/delivery_labels/" + (selected_ids.join(","));
        url = location.protocol + "//" + location.host + path;
        return window.open(url, '_blank');
      }
    });
  });

}).call(this);
